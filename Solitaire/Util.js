'use strict';const VERSION="0.1.22.0";
class Util{static hammingWeight(a){a-=a>>1&1431655765;a=(a&858993459)+(a>>2&858993459);return 16843009*(a+(a>>4)&252645135)>>24}static pointInCircle(a,b,c,d,e){return(a-c)*(a-c)+(b-d)*(b-d)<=e*e}static pointInTriangle(a,b,c,d,e,g,f,h){f=[f-c,h-d];e=[e-c,g-d];d=[a-c,b-d];a=f[0]*f[0]+f[1]*f[1];b=f[0]*e[0]+f[1]*e[1];f=f[0]*d[0]+f[1]*d[1];c=e[0]*e[0]+e[1]*e[1];e=e[0]*d[0]+e[1]*d[1];d=1/(a*c-b*b);c=(c*f-b*e)*d;f=(a*e-b*f)*d;return 0<=c&&0<=f&&1>c+f}static BSD16(a,b){b=b||0;let c=0,d=a.length;for(;c<d;c++)b=
((b>>>1)+((b&1)<<15)|0)+(a[c]&255)&65535|0;return b}static getCommandLine(){for(var a={},b,c=/\+/g,d=/([^&=]+)=?([^&]*)/g,e=window.location.search.substring(1);b=d.exec(e);)a[decodeURIComponent(b[1].replace(c," "))]=decodeURIComponent(b[2].replace(c," "));return a}}
class GameState{constructor(a){this._variant=a;this._gridsSolved=this._getLocalStorageInt(`LoopsSolved${this._variant}`,0);this._jumbleCoinChance=this._gridsSolved/200;this._jumbleCoinChance=Math.min(this._jumbleCoinChance,.5);this._jumbleCoinChance=Math.max(this._jumbleCoinChance,.05)}gridSolved(){this._gridsSolved+=1;try{window.localStorage.setItem(`LoopsSolved${this._variant}`,this._gridsSolved.toString())}catch(a){console.error("window.localStorage not available")}}_getLocalStorageInt(a,b){let c=
"";try{c=window.localStorage.getItem(a)}catch(d){console.error("window.localStorage not available")}a=parseInt(c);return isNaN(a)||0>a?b:a}get level(){return(this._gridsSolved+1).toString()}get jumbleCoinChance(){return this._jumbleCoinChance}};
