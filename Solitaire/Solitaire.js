'use strict';var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};$jscomp.polyfill("Array.prototype.includes",function(a){return a?a:function(a,c){var b=this;b instanceof String&&(b=String(b));var e=b.length;c=c||0;for(0>c&&(c=Math.max(c+e,0));c<e;c++){var f=b[c];if(f===a||Object.is(f,a))return!0}return!1}},"es7","es3");
const Constants={GAME_NAME:"Oddstream Solitaire",GAME_VERSION:"20.1.30.1",SVG_NAMESPACE:"http://www.w3.org/2000/svg",LOCALSTORAGE_SETTINGS:"Oddstream Solitaire Settings",LOCALSTORAGE_GAMES:"Oddstream Solitaire Games",MOBILE:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),CHROME:-1!==navigator.userAgent.indexOf("Chrome/"),EDGE:-1!==navigator.userAgent.indexOf("Edge/"),FIREFOX:-1!==navigator.userAgent.indexOf("Firefox/"),CIRCLE:"\u25cf",STAR:"\u2605",SPADE:"\u2660",
CLUB:"\u2663",HEART:"\u2665",DIAMOND:"\u2666",REDEALS_SYMBOL:"\u21ba",ACCEPT_NOTHING_SYMBOL:"\u00d7",ACCEPT_MARTHA_SYMBOL:"\u00b9",ACCEPT_INSECT_SYMBOL:"\u2263",CARD_WIDTH:60,CARD_WIDTH_STACKED:30,CARD_HEIGHT:90,CARD_RADIUS:4,DEFAULT_STACK_FACTOR_Y:10/3,DEFAULT_STACK_FACTOR_X:2,MAX_STACK_FACTOR:10,FACEDOWN_STACK_WIDTH:10,FACEDOWN_STACK_HEIGHT:10,cardValues:"Joker A 2 3 4 5 6 7 8 9 10 J Q K".split(" "),cardValuesEnglish:"Joker Ace 2 3 4 5 6 7 8 9 10 Jack Queen King".split(" "),AUTOCOLLECT_OFF:0,AUTOCOLLECT_SOLVEABLE:1,
AUTOCOLLECT_ACES:2,AUTOCOLLECT_ANY:3},suitColors=new Map([[Constants.CIRCLE,"purple"],[Constants.STAR,"purple"],[Constants.SPADE,"black"],[Constants.CLUB,"black"],[Constants.HEART,"red"],[Constants.DIAMOND,"red"]]),Util={getDistance:function(a,b){return Math.hypot(b.x-a.x,b.y-a.y)},plural:function(a,b){return 0===a?`no ${b}s`:1===a?`${a} ${b}`:`${a} ${b}s`},newPoint:function(a,b){const c=document.getElementById("baize").createSVGPoint();if("object"===typeof a)c.x=a.x,c.y=a.y;else if("number"===typeof a&&
"number"===typeof b)c.x=a,c.y=b;else throw new TypeError;return c},copyPoint:function(a,b){a.x=b.x;a.y=b.y},nearlySamePoint:function(a,b,c=8){const d=a.x+c,e=a.y-c,f=a.y+c;return b.x>a.x-c&&b.x<d&&b.y>e&&b.y<f},DOM2SVG:function(a,b){a=Util.newPoint(a,b);a.matrixTransform(document.getElementById("baize").getScreenCTM().inverse());a.x=Math.round(a.x);a.y=Math.round(a.y);return a},absorbEvent:function(a){a=a||window.event;a.preventDefault&&a.preventDefault();a.stopPropagation&&a.stopPropagation();a.cancelBubble=
!0;return a.returnValue=!1},setAttributesNS(a,b){for(let c in b)a.setAttributeNS(null,c,b[c])}};class Random{constructor(a){this.seed_=a%2147483647;0>=this.seed_&&(this.seed_+=2147483646)}next(){return this.seed_=16807*this.seed_%2147483647}nextFloat(){return(this.next()-1)/2147483646}nextInt(a,b){return Math.floor(this.nextFloat()*(b-a+1))+a}}
class Baize{constructor(){this.ele=this.ele=document.getElementById("baize");this.height=this.width=this.gutsWidth_=this.borderWidth_=0;this.ele.querySelectorAll("g>rect").forEach(a=>{let b=Number(a.getAttribute("x"));b=10+67*b;let c=Number(a.getAttribute("y"));Util.setAttributesNS(a,{x:b,y:10+100*c,width:String(Constants.CARD_WIDTH),height:String(Constants.CARD_HEIGHT),rx:String(Constants.CARD_RADIUS),ry:String(Constants.CARD_RADIUS)});b>this.gutsWidth_&&(this.gutsWidth_=b)});this.gutsWidth_+=Constants.CARD_WIDTH+
10;this.setBox_();window.addEventListener("orientationchange",this.onOrientationChange.bind(this))}adjustBorder_(a){this.ele.querySelectorAll("g>rect,g>text").forEach(b=>{if(b.hasAttribute("x")){let c=Number.parseInt(b.getAttribute("x"),10)||0;b.setAttributeNS(null,"x",String(c+a))}});cardContainers.forEach(b=>{b.pt.x+=a;b.cards.forEach(b=>{b.pt.x+=a;b.position0()})})}setBox_(){this.width=this.gutsWidth_;this.height=Math.max(1200,window.screen.height);window.screen.width>window.screen.height&&1E3>
this.gutsWidth_&&(this.borderWidth_=(1E3-this.gutsWidth_)/2,this.adjustBorder_(this.borderWidth_),this.width=1E3);Util.setAttributesNS(this.ele,{width:String(this.width),height:String(this.height),viewBox:`0 0 ${this.width} ${this.height}`,preserveAspectRatio:"xMinYMin slice"})}onOrientationChange(){this.borderWidth_&&(this.adjustBorder_(-this.borderWidth_),this.borderWidth_=0);this.setBox_();cardContainers.forEach(a=>{a.cards.forEach(a=>{a.buildCard_()})});allAvailableMoves()}elevateCard(a){a.g!==
this.ele.lastChild&&this.ele.appendChild(a.g)}}const cardContainers=[];let keyFocus=null;const baize=new Baize;let undoStack=[];function moveCards(a,b,c){undoPush();if(0==c)console.error("moveCards(0)");else if(1==c&&0<a.cards.length)console.assert(a.peek()),a=a.pop(),b.push(a);else{const d=[];for(;0<c;)a.peek()&&d.push(a.pop()),--c;for(;d.length;)b.push(d.pop())}robot()}function undoCounter(){const a=document.getElementById("moveCounter");a&&(a.innerHTML=String(undoStack.length))}
function undoPush(){const a=new Saved;undoStack.push(a);undoCounter()}function undoPop(){const a=undoStack.pop();undoCounter();return a}function undoReset(){undoStack.length=0;undoCounter()}
window.doundo=function(){if(0==undoStack.length)displayToast("nothing to undo");else{var a=undoPop(),b=[];for(var c of cardContainers)for(const a of c.cards)b.push(a);for(c=0;c<cardContainers.length;c++)cardContainers[c].load2(b,a.containers[c]);a.hasOwnProperty("redeals")?stock.redeals=a.redeals:stock.redeals=null;stock.updateRedealsSVG_();allAvailableMoves();scrunchContainers();checkIfGameOver()}};function dummyTouchStartHandler(a){a.preventDefault()}
function dummyTouchMoveHandler(a){a.preventDefault()}function dummyTouchEndHandler(a){a.preventDefault()}
class Card{constructor(a,b,c,d,e){this.pack=a;this.ordinal=c;this.suit=b;this.faceDown=d;this.id=10>this.ordinal?`${a}${b}0${String(this.ordinal)}`:`${a}${b}${String(this.ordinal)}`;console.assert(4===this.id.length);this.color=suitColors.get(this.suit);this.owner=null;this.pt=Util.newPoint(e);this.ptOriginalPointerDown=this.grabbedTail=this.ptOffset=this.ptOriginal=null;this.downHandler=this.onpointerdown.bind(this);this.moveHandler=this.onpointermove.bind(this);this.upHandler=this.onpointerup.bind(this);
this.cancelHandler=this.onpointercancel.bind(this);this.overHandler=this.onpointerover.bind(this);this.animationIds=[];this.g=document.createElementNS(Constants.SVG_NAMESPACE,"g");this.buildCard_();this.position0();this.addListeners_()}faceValue(){return Constants.cardValues[this.ordinal]}toString(){return this.id}buildCard_(){for(;this.g.hasChildNodes();)this.g.removeChild(this.g.lastChild);var a=document.createElementNS(Constants.SVG_NAMESPACE,"rect");Util.setAttributesNS(a,{width:String(Constants.CARD_WIDTH),
height:String(Constants.CARD_HEIGHT),rx:String(Constants.CARD_RADIUS),ry:String(Constants.CARD_RADIUS)});this.g.appendChild(a);if(this.faceDown)a.classList.add("spielkarteback");else if(a.classList.add("spielkarte"),a=document.createElementNS(Constants.SVG_NAMESPACE,"text"),a.classList.add("spielkartevalue"),Util.setAttributesNS(a,{x:10===this.ordinal?String(Constants.CARD_WIDTH/4+4):String(Constants.CARD_WIDTH/4),y:String(Constants.CARD_HEIGHT/4),"text-anchor":"middle","dominant-baseline":"middle",
fill:this.color}),a.innerHTML=this.faceValue(),this.g.appendChild(a),Constants.MOBILE){a=document.createElementNS(Constants.SVG_NAMESPACE,"use");var b={href:`#${this.suit}`,height:"24",width:"24",fill:this.color};"BottomLeft"===rules.Cards.suit?(b.x="4",b.y=String(Constants.CARD_HEIGHT/3*2)):"TopRight"===rules.Cards.suit?(b.x=String(.6*Constants.CARD_WIDTH),b.y=String(Constants.CARD_HEIGHT/20)):console.error("Unknown rules.Cards.suit",rules.Cards.suit);Util.setAttributesNS(a,b);this.g.appendChild(a)}else a=
document.createElementNS(Constants.SVG_NAMESPACE,"text"),a.classList.add("spielkartesuit"),b={"text-anchor":"middle","dominant-baseline":"middle",fill:this.color},"BottomLeft"===rules.Cards.suit?(b.x=String(Constants.CARD_WIDTH/4),b.y=String(Constants.CARD_HEIGHT/10*9)):"TopRight"===rules.Cards.suit?(b.x=String(Constants.CARD_WIDTH/4*3),b.y=String(Constants.CARD_HEIGHT/4)):console.error("Unknown rules.Cards.suit",rules.Cards.suit),Util.setAttributesNS(a,b),a.innerHTML=this.suit,this.g.appendChild(a)}addListeners_(){this.g.addEventListener("pointerover",
this.overHandler);this.g.addEventListener("pointerdown",this.downHandler);this.g.addEventListener("touchstart",dummyTouchStartHandler);this.g.addEventListener("touchmove",dummyTouchMoveHandler);this.g.addEventListener("touchend",dummyTouchEndHandler)}removeListeners_(){this.g.removeEventListener("pointerover",this.overHandler);this.g.removeEventListener("pointerdown",this.downHandler);this.g.removeEventListener("touchstart",dummyTouchStartHandler);this.g.removeEventListener("touchmove",dummyTouchMoveHandler);
this.g.removeEventListener("touchend",dummyTouchEndHandler)}addDragListeners_(){window.addEventListener("pointermove",this.moveHandler);window.addEventListener("pointerup",this.upHandler);window.addEventListener("pointercancel",this.cancelHandler)}removeDragListeners_(){window.removeEventListener("pointermove",this.moveHandler);window.removeEventListener("pointerup",this.upHandler);window.removeEventListener("pointercancel",this.cancelHandler)}onclick(a){console.error("click received directly on a card")}onpointerover(a){a=
"default";this.faceDown&&this===this.owner.peek()?a="pointer":this.owner.canGrab(this)&&(a=settings.autoPlay?"pointer":"grab");for(let b=this.g.firstChild;b;b=b.nextSibling)b.style.cursor=a}getPointerPoint_(a){return Util.DOM2SVG(a.clientX,a.clientY)}onpointerdown(a){Util.absorbEvent(a);keyFocus&&(keyFocus.mark(!1),keyFocus=null);if(Constants.FIREFOX){if(this.owner.lastEvent&&a.pointerType!==this.owner.lastEvent.pointerType&&a.timeStamp<this.owner.lastEvent.timeStamp+1E3)return console.log("stifle Firefox event"),
!1;this.owner.lastEvent=a}if("mouse"===a.pointerType&&0!==a.button)return console.log("don't care about mouse button",a.button),!1;if(this.animationIds.length)return console.warn("clicking on a moving card",this.id),!1;if(this.grabbedTail)return console.warn("grabbing a grabbed card",this.id),!1;this.ptOriginalPointerDown=this.getPointerPoint_(a);this.grabbedTail=this.owner.canGrab(this);if(!this.grabbedTail)return this.shake(),!1;this.grabbedTail.forEach(a=>{a.markGrabbed();a.ptOriginal=Util.newPoint(a.pt);
a.ptOffset=Util.newPoint(this.ptOriginalPointerDown.x-a.pt.x,this.ptOriginalPointerDown.y-a.pt.y);baize.elevateCard(a)});this.addDragListeners_();return!1}scalePointer_(a){const b=baize.ele.getBoundingClientRect(),c=Math.round(baize.height/(b.bottom-b.top)*(a.y-this.ptOriginalPointerDown.y));a.x=this.ptOriginalPointerDown.x+Math.round(baize.width/(b.right-b.left)*(a.x-this.ptOriginalPointerDown.x));a.y=this.ptOriginalPointerDown.y+c}onpointermove(a){Util.absorbEvent(a);const b=this.getPointerPoint_(a);
this.scalePointer_(b);this.grabbedTail.forEach(a=>{a.position1(b.x-a.ptOffset.x,b.y-a.ptOffset.y)});return!1}onpointerup(a){Util.absorbEvent(a);a=this.getPointerPoint_(a);a=Util.newPoint(a.x-this.ptOffset.x,a.y-this.ptOffset.y);Util.nearlySamePoint(a,this.ptOriginal)?(this.grabbedTail.forEach(a=>{a.position1(a.ptOriginal.x,a.ptOriginal.y)}),this.owner.onclick(this)):(a=this.getNewOwner())?this.moveTail(a):this.grabbedTail.forEach(a=>{a.animate(a.ptOriginal)});this.removeDragListeners_();this.grabbedTail.forEach(a=>
{a.unmarkGrabbed()});this.grabbedTail=null;return!1}onpointercancel(a){console.warn("pointer cancel",a);this.grabbedTail&&this.grabbedTail.forEach(a=>a.animate(a.ptOriginal));this.grabbedTail=null;this.removeDragListeners_()}flipUp(){this.faceDown?(this.faceDown=!1,this.buildCard_()):console.warn(this.id,"is already up")}flipDown(){this.faceDown?console.warn(this.id,"is already down"):(this.faceDown=!0,this.buildCard_())}position0(){console.assert(void 0!==this.pt.x);console.assert(void 0!==this.pt.y);
this.g.setAttributeNS(null,"transform",`translate(${this.pt.x} ${this.pt.y})`)}position1(a,b){this.pt.x=a;this.pt.y=b;this.position0()}smootherstep_(a){return a*a*a*(a*(6*a-15)+10)}animate(a){const b=[0,50,40,30,20,10],c=h=>{var g=this.smootherstep_(f/e);h=Math.round(d.x*g+a.x*(1-g));g=Math.round(d.y*g+a.y*(1-g));this.g.setAttributeNS(null,"transform",`translate(${h} ${g})`);f-=e/b[settings.aniSpeed];0<f?this.animationIds.push(window.requestAnimationFrame(c)):(h===this.pt.x&&g===this.pt.y||this.position0(),
this.animationIds.length=0)},d=Util.newPoint(this.pt);Util.copyPoint(this.pt,a);const e=Util.getDistance(d,a);let f=e;this.animationIds.length&&waitForCard(this).catch(a=>console.error("animate() did not wait for card",a));0!==e&&this.animationIds.push(window.requestAnimationFrame(c))}shake(){const a=c=>{0<--b?(this.g.setAttributeNS(null,"transform",`translate(${b%2?this.pt.x+b:this.pt.x-b} ${this.pt.y})`),this.animationIds.push(window.requestAnimationFrame(a))):(this.position0(),this.animationIds.length=
0)};this.animationIds.length&&waitForCard(this).catch(a=>console.log("shake",a));let b=6;this.animationIds.push(window.requestAnimationFrame(a))}moveTail(a){const b=this.owner.cards.findIndex(a=>a===this);moveCards(this.owner,a,this.owner.cards.length-b)}overlapArea_(a){return Math.max(0,Math.min(this.pt.x+Constants.CARD_WIDTH,a.x+Constants.CARD_WIDTH)-Math.max(this.pt.x,a.x))*Math.max(0,Math.min(this.pt.y+Constants.CARD_HEIGHT,a.y+Constants.CARD_HEIGHT)-Math.max(this.pt.y,a.y))}getNewOwner(){let a=
null,b=0;for(const d of cardContainers)if(this.owner!==d&&this.owner.canTarget(d)&&d.canAcceptCard(this)){var c=d.peek();c=this.overlapArea_(c?c.pt:d.pt);c>b&&(b=c,a=d)}return a}findFullestAcceptingContainer(a){const b=a=>{const b=a.peek();return b&&b.suit===this.suit?a.cards.length+10:a.cards.length};let c=null,d=-1;for(const e of a)e!==this.owner&&this.owner.canTarget(e)&&e.canAcceptCard(this)&&(a=b(e),a>d&&(d=a,c=e));return c}potentialMovesToContainers(){console.assert(!(this.owner instanceof Foundation));
let a=0;[foundations,tableaux,cells].forEach(b=>{!(b=this.findFullestAcceptingContainer(b))||0===b.cards.length&&this.owner.cards[0]===this&&b.constructor.name===this.owner.constructor.name||(a++,b instanceof Cell||this.markMoveable(b))});return a}getTail(){const a=this.owner.cards.findIndex(a=>a===this);return this.owner.cards.slice(a)}isTopCard(){return this.owner.peek()===this}markMoveable(a=null){if(!this.faceDown&&"rect"===this.g.firstChild.localName){var b=this.g.firstChild.classList;settings.sensoryCues?
a?b.remove("unmoveable"):b.add("unmoveable"):b.remove("unmoveable")}}markGrabbed(){this.g.firstChild.classList.add("grabbed")}unmarkGrabbed(){this.g.firstChild.classList.remove("grabbed")}getSaveableCard(){return{pack:this.pack,suit:this.suit,ordinal:this.ordinal,faceDown:this.faceDown}}destructor(){this.removeListeners_();baize.ele.removeChild(this.g)}}
class CardContainer{constructor(a,b){this.pt=a;this.g=b;this.cards=[];this.a_deal=this.g.getAttribute("deal");this.stackFactor=NaN;this.a_accept=b.getAttribute("accept")||0;this.isAcceptSymbol_()||(this.a_accept=Number.parseInt(this.a_accept,10),console.assert(!isNaN(this.a_accept)));this.a_accept&&this.createAcceptSVG_();cardContainers.push(this)}isAcceptSymbol_(){return Constants.ACCEPT_NOTHING_SYMBOL===this.a_accept||Constants.ACCEPT_INSECT_SYMBOL===this.a_accept||Constants.ACCEPT_MARTHA_SYMBOL===
this.a_accept}createAcceptSVG_(){console.assert(this.a_accept);var a=this.g.querySelector("text");a?this.isAcceptSymbol_()?a.innerHTML=this.a_accept:a.innerHTML=Constants.cardValues[this.a_accept]:(a=document.createElementNS(Constants.SVG_NAMESPACE,"text"),a.classList.add("accepts"),this.isAcceptSymbol_()?(a.setAttributeNS(null,"x",String(this.pt.x+10)),a.setAttributeNS(null,"y",String(this.pt.y+24)),a.innerHTML=this.a_accept):(a.setAttributeNS(null,"x",String(this.pt.x+4)),a.setAttributeNS(null,
"y",String(this.pt.y+24)),a.innerHTML=Constants.cardValues[this.a_accept]),this.g.appendChild(a))}load(a){a&&(this.cards.forEach(a=>a.destructor()),this.cards=[],a.forEach(a=>{a=new Card(a.pack,a.suit,a.ordinal,a.faceDown,this.pt);baize.ele.appendChild(a.g);this.push(a)}))}load2(a,b){this.cards=[];b.forEach(b=>{var c;a:{for(c=0;c<a.length;c++){const d=a[c];if(b.pack===d.pack&&b.suit==d.suit&&b.ordinal==d.ordinal){c=d;break a}}c=void 0}b.faceDown&&!c.faceDown?c.flipDown():!b.faceDown&&c.faceDown&&
c.flipUp();this.push(c)})}peek(){return this.cards[this.cards.length-1]}pop(){const a=this.cards.pop();a&&(a.owner=null);return a}push(a,b){a.owner=this;this.cards.push(a);baize.elevateCard(a);a.animate(b?b:this.pt)}onclick(a){console.error("onclick not implemented in base CardContainer",a)}sort(a){a?console.log("reusing seed",a):settings.dealWinnable&&rules.Winnable.length?(a=rules.Winnable[Math.floor(Math.random()*rules.Winnable.length)],console.log("winnable seed",a)):(a=Math.round(1E6*Math.random()),
console.log("new seed",a));const b=new Random(a);this.cards.sort(function(a,b){return a.id.localeCompare(b.id)});for(let a=this.cards.length-1;0<a;a--){const c=b.nextInt(0,a);if(a!==c){const b=this.cards[a];this.cards[a]=this.cards[c];this.cards[c]=b}}gameState[rules.Name].seed=a}canAcceptCard(a){console.error("can accept card not implemented",a);return!1}canTarget(a){console.error("can target container not implemented",a);return!1}canGrab(a){return a.isTopCard()?[a]:null}availableMovesTopCard_(){let a=
0;const b=this.peek();b&&(b.faceDown?(console.assert(this instanceof Stock),a++):a+=b.potentialMovesToContainers());return a}availableMovesStack_(){let a=0;this.cards.forEach(b=>{b.markMoveable();!b.faceDown&&this.canGrab(b)&&(a+=b.potentialMovesToContainers())});return a}availableMoves(){this.cards.forEach(a=>a.markMoveable());return this.availableMovesTopCard_()}bury_(){var a=this.cards.filter(a=>a.ordinal===rules.Tableau.bury);if(a){a=a.concat(this.cards.filter(a=>a.ordinal!==rules.Tableau.bury));
this.cards=[];for(const b of a)this.push(b)}}disinter_(){const a=this.cards.filter(a=>a.ordinal===rules.Tableau.disinter);if(a){const b=this.cards.filter(a=>a.ordinal!==rules.Tableau.disinter);this.cards=[];for(const a of b)this.push(a);for(const b of a)this.push(b)}}deal(){if(this.a_deal){for(var a of this.a_deal){let b=null;if("uU".includes(a))(b=stock.pop())&&this.push(b);else if("dD".includes(a)){if(b=stock.pop())this.push(b),b.flipDown()}else if("pP".includes(a)){if(b=stock.pop()){const a=stock.cards.filter(a=>
a.ordinal===b.ordinal);console.assert(3===a.length);a.forEach(a=>a.flipUp());stock.cards=stock.cards.filter(a=>a.ordinal!==b.ordinal);for(let b=0;b<a.length;b++)foundations[b].push(a[b]);this.push(b)}}else if("\u2665\u2666\u2663\u2660".includes(a)){const c=a,d=Number.parseInt(this.a_deal.slice(1),10);a=stock.cards.findIndex(a=>a.suit===c&&a.ordinal===d);if(-1<a)b=stock.cards.splice(a,1)[0],b.flipUp();else{console.error("cannot find",c,d,"in stock");return}this.push(b);break}else console.error("unexpected character in deal",
a)}rules.Tableau.bury&&window.setTimeout(this.bury_.bind(this),1E3);rules.Tableau.disinter&&window.setTimeout(this.disinter_.bind(this),1E3)}}dynamicX_(a=this.cards.length){let b=this.pt.x;for(let c=0;c<a;c++)b+=this.cards[c].faceDown?Constants.FACEDOWN_STACK_WIDTH:Math.round(Constants.CARD_WIDTH/this.stackFactor);return b}dynamicArrayX_(){const a=Array(this.cards.length);a[0]=this.pt.x;for(let b=1;b<this.cards.length;b++)a[b]=a[b-1]+(this.cards[b-1].faceDown?Constants.FACEDOWN_STACK_WIDTH:Math.round(Constants.CARD_WIDTH/
this.stackFactor));return a}dynamicY_(a=this.cards.length){let b=this.pt.y;for(let c=0;c<a;c++)b+=this.cards[c].faceDown?Constants.FACEDOWN_STACK_HEIGHT:Math.round(Constants.CARD_HEIGHT/this.stackFactor);return b}dynamicArrayY_(){const a=Array(this.cards.length);a[0]=this.pt.y;for(let b=1;b<this.cards.length;b++)a[b]=a[b-1]+(this.cards[b-1].faceDown?Constants.FACEDOWN_STACK_HEIGHT:Math.round(Constants.CARD_HEIGHT/this.stackFactor));return a}resetStackFactor_(a){switch(a.fan){case "Right":case "Left":this.stackFactor=
Constants.DEFAULT_STACK_FACTOR_X;break;case "Down":this.stackFactor=Constants.DEFAULT_STACK_FACTOR_Y;break;case "None":this.stackFactor=0}}scrunchCards(a){var b=this.stackFactor;if("Down"===a.fan){this.stackFactor=Constants.DEFAULT_STACK_FACTOR_Y;var c=0===a.maxfan?baize.height-this.pt.y:this.pt.y+100*a.maxfan;for(a=this.dynamicArrayY_();a[a.length-1]+Constants.CARD_HEIGHT>c&&this.stackFactor<Constants.MAX_STACK_FACTOR;)this.stackFactor+=.25,a=this.dynamicArrayY_();if(this.stackFactor!==b)for(b=0;b<
this.cards.length;b++)this.cards[b].animate(Util.newPoint(this.pt.x,a[b]))}else if("Right"===a.fan){this.stackFactor=Constants.DEFAULT_STACK_FACTOR_X;c=0===a.maxfan?baize.width-this.pt.x:this.pt.x+67*a.maxfan;for(a=this.dynamicArrayX_();a[a.length-1]+Constants.CARD_WIDTH>c&&this.stackFactor<Constants.MAX_STACK_FACTOR;)this.stackFactor+=.25,a=this.dynamicArrayX_();if(this.stackFactor!==b)for(b=0;b<this.cards.length;b++)this.cards[b].animate(Util.newPoint(a[b],this.pt.y))}else"None"!==a.fan&&console.error("Unknown scrunch fan",
a.fan)}isSolveable(){console.error("is solveable not implemented",this);return!1}isComplete(){return 0===this.cards.length}getSaveableCards(){const a=[];this.cards.forEach(b=>a.push(b.getSaveableCard()));return a}autoMove(){}english(){return"There is no explanation for this"}}
class Cell extends CardContainer{constructor(a,b){super(a,b);this.rules=rules.Cell}onclick(a){if(settings.autoPlay){var b;(b=a.findFullestAcceptingContainer(foundations))||(b=a.findFullestAcceptingContainer(tableaux));b?moveCards(this,b,1):a.shake()}}canAcceptCard(a){return a!==a.owner.peek()?!1:0===this.cards.length}canTarget(a){return null===this.rules.target?!0:this.rules.target===a.constructor.name}isSolveable(){return!0}english(){return`Cell ${countInstances(Cell)}. Can store one card of any type.`}}
class CellCarpet extends Cell{autoMove(){0===this.cards.length&&(0<waste.cards.length?moveCards(waste,this,1):0<stock.cards.length&&moveCards(stock,this,1))}english(){return super.english()+" Spaces are automatically filled with the top card from the waste or stock."}}
class Reserve extends CardContainer{constructor(a,b){super(a,b);this.rules=rules.Reserve;this.resetStackFactor_(this.rules)}push(a){0===this.cards.length&&this.resetStackFactor_(this.rules);const b=Util.newPoint(this.pt);"Down"===this.rules.fan?b.y=this.dynamicY_():"Right"===this.rules.fan&&(b.x=this.dynamicX_());super.push(a,b)}pop(){const a=super.pop(),b=this.peek();b&&b.faceDown&&b.flipUp();return a}onclick(a){if(!a.faceDown&&a.isTopCard()&&settings.autoPlay){var b;(b=a.findFullestAcceptingContainer(foundations))||
(b=a.findFullestAcceptingContainer(tableaux));b?moveCards(this,b,1):a.shake()}}canAcceptCard(a){return!1}canTarget(a){return null===this.rules.target?!0:this.rules.target===a.constructor.name}isSolveable(){return 0===this.cards.length}english(){return`Reserve ${countInstances(Reserve)}. Stores multiple cards of any type. You cannot move a card to a reserve stack.`}}
class ReserveFrog extends Reserve{deal(){for(;13>this.cards.length;){var a=stock.pop();if(1===a.ordinal)for(const b of foundations){if(0===b.cards.length){b.push(a);break}}else this.push(a)}foundations.some(a=>0<a.cards.length)||(a=stock.cards.findIndex(a=>1===a.ordinal),a=stock.cards.splice(a,1)[0],foundations[0].push(a),a.flipUp())}}
class Stock extends CardContainer{constructor(a,b){super(a,b);this.rules=rules.Stock;this.rules.hidden&&(this.g.style.display="none");this.redeals=this.rules.redeals;b.onclick=this.clickOnEmpty.bind(this)}expectedNumberOfCards(){return 13*this.rules.packs*this.rules.suitfilter.length}createPacks(){this.cards=[];for(let a=0;a<this.rules.packs;a++)for(let b of this.rules.suitfilter)for(let c=1;c<Constants.cardValues.length;c++){const d=new Card(a,b,c,!0,this.pt);d.owner=this;this.cards.push(d)}console.log(`${stock.cards.length} cards created`);
this.cards.length!==this.expectedNumberOfCards()&&displayToast(`created ${this.canAcceptCard.length} cards, expected ${stock.expectedNumberOfCards()}`);this.sort();this.cards.forEach(a=>baize.ele.appendChild(a.g))}createRedealsSVG_(){const a=document.createElementNS(Constants.SVG_NAMESPACE,"text");a.classList.add("stockredeals");a.setAttributeNS(null,"x",String(this.pt.x+12));a.setAttributeNS(null,"y",String(this.pt.y+66));a.innerHTML=Constants.REDEALS_SYMBOL;this.g.appendChild(a)}updateRedealsSVG_(){const a=
this.g.querySelector("text");a&&(a.innerHTML=this.redealsAvailable()?Constants.REDEALS_SYMBOL:"")}pop(){const a=super.pop();a&&a.faceDown&&a.flipUp();0===this.cards.length&&this.updateRedealsSVG_();return a}push(a){super.push(a);a.faceDown||a.flipDown()}redealsAvailable(){return null===this.redeals||Number.isInteger(this.redeals)&&0<this.redeals}decreaseRedeals(){Number.isInteger(this.redeals)&&(--this.redeals,this.updateRedealsSVG_())}clickOnEmpty(){if(waste&&this.redealsAvailable()){for(undoPush();waste.cards.length;){const a=
waste.cards.pop();stock.push(a);undoPop()}this.decreaseRedeals()}}canAcceptCard(a){return!1}canTarget(a){return null===this.rules.target?!0:this.rules.target===a.constructor.name}isSolveable(){return 0===this.cards.length}availableMoves(){let a=0;this.rules.hidden||(0===this.cards.length?this.redealsAvailable()&&(a=1):a=super.availableMoves());return a}english(){let a=`The game uses ${Util.plural(this.rules.packs,"pack")} of cards.`;this.rules.hidden||(a=null===this.rules.redeals?a+" The stock can be redealt any number of times.":
Number.isInteger(this.rules.redeals)&&0<this.rules.redeals?a+` The stock can be redealt ${Util.plural(this.rules.redeals,"time")}.`:a+" The stock cannot be redealt.");return a}}
class StockKlondike extends Stock{constructor(a,b){super(a,b);this.createRedealsSVG_()}onclick(a){(!Number.isInteger(rules.Waste.maxcards)||waste.cards.length<rules.Waste.maxcards)&&moveCards(this,waste,this.rules.cards)}english(){return`${super.english()} Clicking on the stock will transfer ${Util.plural(this.rules.cards,"card")} to the waste stack.`}}
class StockAgnes extends Stock{onclick(a){undoPush();for(const a of reserves)0<a.cards.length&&(moveCards(this,a,1),undoPop())}english(){return`${super.english()} Clicking on the stock will transfer one card to each of the reserve stacks.`}}
class StockScorpion extends Stock{onclick(a){undoPush();for(const a of tableaux)0<this.cards.length&&(moveCards(this,a,1),undoPop())}availableMoves(){return this.cards.length?1:0}english(){return"Clicking on the stock will transfer one card to each of the tableaux stacks."}}
class StockSpider extends Stock{onclick(a){if(tableaux.some(a=>0===a.cards.length)){let a=0;tableaux.forEach(b=>a+=b.cards.length);if(a>=tableaux.length){displayToast("all spaces in the tableau must be filled before a new row is dealt");return}}undoPush();for(const a of tableaux)0<this.cards.length&&(moveCards(this,a,1),undoPop())}availableMoves(){return this.cards.length?1:0}english(){return"Clicking on the stock will transfer one card to each of the tableaux stacks, if all spaces in the tableaux have been filled."}}
class StockGolf extends Stock{onclick(a){moveCards(this,foundations[0],1)}availableMoves(){return this.cards.length?1:0}english(){return`${super.english()} Clicking on the stock will transfer one to the foundation stack.`}}
class StockCruel extends Stock{constructor(a,b){super(a,b);this.createRedealsSVG_()}part1_(){const a=[];for(let b=tableaux.length-1;0<=b;b--){const c=tableaux[b].cards,d=[];for(;c.length;)d.push(c.pop());for(;d.length;)a.push(d.pop())}return a}part2_(a){for(let c=0;c<tableaux.length;c++){const d=tableaux[c].cards;var b=tableaux[c].a_deal.length;b=a.splice(-b,b);if(0===b.length)break;for(let a=0;a<b.length;a++)d.push(b[a])}}part3_(){for(let a=0;a<tableaux.length;a++){const b=tableaux[a];for(let a=
0;a<b.cards.length;a++){const c=b.cards[a];c.owner=b;baize.elevateCard(c);"Down"===rules.Tableau.fan?c.animate(Util.newPoint(b.pt.x,b.dynamicY_(a))):"Right"===rules.Tableau.fan&&c.animate(Util.newPoint(b.dynamicX_(a),b.pt.y))}}}clickOnEmpty(){if(this.redealsAvailable()){undoPush();const a=this.part1_();this.part2_(a);this.part3_();1===allAvailableMoves()&&displayToastNoAvailableMoves();this.decreaseRedeals()}}availableMoves(){return this.redealsAvailable()?1:0}english(){return`${super.english()} Clicking on the stock will collect and then redeal the tableaux stacks.`}}
class StockFan extends Stock{constructor(a,b){super(a,b);this.createRedealsSVG_()}clickOnEmpty(){if(this.redealsAvailable()){undoPush();tableaux.forEach(a=>{stock.cards=stock.cards.concat(a.cards);a.cards=[]});stock.cards.forEach(a=>{a.owner=stock;a.position1(stock.pt.x,stock.pt.y)});const a=gameState[rules.Name].seed;stock.sort(123456);gameState[rules.Name].seed=a;tableaux.forEach(a=>{window.setTimeout(()=>a.deal(),0)});waitForCards().then(()=>{1===allAvailableMoves()&&displayToastNoAvailableMoves();
this.decreaseRedeals()})}}availableMoves(){return this.redealsAvailable()?1:0}english(){return`${super.english()} Clicking on the stock will collect and then redeal the tableaux stacks.`}}
class Waste extends CardContainer{constructor(a,b){super(a,b);this.rules=rules.Waste}middleX_(){return this.pt.x+Constants.CARD_WIDTH_STACKED}rightX_(){return this.pt.x+2*Constants.CARD_WIDTH_STACKED}push(a){const b=Util.newPoint(this.pt);if(0!==this.cards.length)if(1===this.cards.length)b.x=this.middleX_();else if(2===this.cards.length)b.x=this.rightX_();else{b.x=this.rightX_();var c=this.cards[this.cards.length-2],d=Util.newPoint(this.pt.x,this.pt.y);c.animate(d);c=this.peek();d=Util.newPoint(this.middleX_(),
this.pt.y);c.animate(d)}super.push(a,b);a.faceDown&&a.flipUp();a.markMoveable()}pop(){const a=super.pop();console.assert(!a.faceDown);if(2<this.cards.length){var b=this.cards[this.cards.length-1],c=Util.newPoint(this.rightX_(),this.pt.y);b.animate(c);b=this.cards[this.cards.length-2];c=Util.newPoint(this.middleX_(),this.pt.y);b.animate(c);b=this.cards[this.cards.length-3];c=Util.newPoint(this.pt.x,this.pt.y);b.animate(c)}return a}onclick(a){if(a.isTopCard()&&settings.autoPlay){var b;(b=a.findFullestAcceptingContainer(foundations))||
(b=a.findFullestAcceptingContainer(tableaux));b||(b=a.findFullestAcceptingContainer(cells));b?moveCards(this,b,1):a.shake()}}canAcceptCard(a){return!Number.isInteger(this.rules.maxcards)||this.cards.length<this.rules.maxcards?a.owner instanceof Stock&&1===rules.Stock.cards:!1}canTarget(a){return null===this.rules.target?!0:this.rules.target===a.constructor.name}isSolveable(){return 0===this.cards.length}english(){return`Waste ${countInstances(Waste)}. Cards can be be moved from here to tableaux or foundations.`}}
class Foundation extends CardContainer{constructor(a,b){super(a,b);this.resetStackFactor_(rules.Foundation);this.scattered=!1;0===this.a_accept&&rules.Foundation.accept&&(this.a_accept=rules.Foundation.accept,this.createAcceptSVG_());if(this.a_complete=this.g.getAttribute("complete"))this.a_completeSuit=this.a_complete.charAt(0),this.a_completeOrd=Number.parseInt(this.a_complete.slice(1),10);(this.a_reverse=!!this.g.getAttribute("reverse"))?(this.rules=JSON.parse(JSON.stringify(rules.Foundation)),
1===this.rules.rank&&(this.rules.rank=2)):this.rules=rules.Foundation}push(a){console.assert(!a.faceDown);const b=Util.newPoint(this.pt);"Down"===rules.Foundation.fan?b.y=this.dynamicY_():"Right"===rules.Foundation.fan&&(b.x=this.dynamicX_());super.push(a,b)}onclick(a){console.assert(!a.faceDown);if(settings.playFromFoundation&&settings.autoPlay){var b=a.findFullestAcceptingContainer(tableaux);b?moveCards(this,b,1):a.shake()}}isSolveable(){return!0}availableMoves(){this.cards.forEach(a=>a.markMoveable());
return 0}canAcceptCard(a){let b=!0;if(a.owner.peek()!==a)b=!1;else{const c=this.peek();c?b=isConformant0(this.rules,c,a):this.a_accept&&(b=a.ordinal===this.a_accept)}return b}canTarget(a){return null===rules.Foundation.target?!0:rules.Foundation.target===a.constructor.name}canGrab(a){return settings.playFromFoundation?[a]:null}collector(){const a=()=>{let a=foundations[0].cards.length;for(let b=1;b<foundations.length;b++)a=Math.min(a,foundations[b].cards.length);return this.cards.length===a},b=b=>
{b&&!b.faceDown&&b.owner.canTarget(this)&&this.canAcceptCard(b)&&a()&&(moveCards(b.owner,this,1),c++)};let c=0;cells.forEach(a=>b(a.peek()));tableaux.forEach(a=>b(a.peek()));return 0<c}isComplete(){if(this.a_complete){const a=this.peek();return!!a&&a.ordinal===this.a_completeOrd&&a.suit===this.a_completeSuit}return!0}scatter(){this.scattered||(this.cards.forEach(a=>a.markMoveable(this)),this["scatter"+rules.Foundation.scatter](),this.scattered=!0)}scatterNone(){}scatterCircle(){function a(){var a=
this.owner.cards.indexOf(this)*(360/this.owner.cards.length);a=Math.PI*a/180;a=Util.newPoint(200+150*Math.cos(a),250+150*Math.sin(a));this.animate(a)}this.cards.forEach(b=>window.setTimeout(a.bind(b),500))}scatterDown(){function a(){const a=Util.newPoint(this.pt.x,this.pt.y+(this.ordinal-1)*Math.round(Constants.CARD_HEIGHT/3));this.animate(a)}this.cards.forEach(b=>window.setTimeout(a.bind(b),500))}scatterLeft(){function a(){const a=Util.newPoint(this.pt.x-(this.ordinal-1)*Math.round(Constants.CARD_WIDTH/
2),this.pt.y);this.animate(a)}for(let b=this.cards.length-1;0<=b;b--)window.setTimeout(a.bind(this.cards[b]),500)}scatterRight(){function a(){const a=Util.newPoint(this.pt.x+(this.ordinal-1)*Math.round(Constants.CARD_WIDTH/2),this.pt.y);this.animate(a)}for(let b=this.cards.length-1;0<=b;b--)window.setTimeout(a.bind(this.cards[b]),500)}english(){return rules.Foundation.hidden?"":this.a_complete?`Foundation ${countInstances(Foundation)}. Build ${englishRules(rules.Foundation)}. The game is complete when each stack has a certain card on top.`:
`Foundation ${countInstances(Foundation)}. Build ${englishRules(rules.Foundation)}. `}}class FoundationCanfield extends Foundation{push(a){super.push(a);this===foundations[0]&&1===this.cards.length&&foundations.forEach(b=>{b.a_accept=a.ordinal;b.createAcceptSVG_()})}}
class FoundationOsmosis extends FoundationCanfield{canAcceptCard(a){if(0===this.cards.length)return a.ordinal===this.a_accept;if(a.suit!==this.cards[0].suit)return!1;const b=foundations.findIndex(a=>a===this);return 0===b?!0:0<=foundations[b-1].cards.findIndex(b=>b.ordinal===a.ordinal)}}
class FoundationPenguin extends Foundation{push(a){super.push(a);if(this===foundations[0]&&1===this.cards.length){foundations.forEach(b=>{b.a_accept=a.ordinal;b.createAcceptSVG_()});const b=1===a.ordinal?13:a.ordinal-1;tableaux.forEach(a=>{a.a_accept=b;a.createAcceptSVG_()})}}}
class FoundationSpider extends Foundation{canAcceptCard(a){if(this.cards.length||13!==a.ordinal)return!1;a=a.getTail();return 13!==a.length?!1:isConformant(this.rules,a)}collector(){if(this.cards.length)return!1;let a=!1;tableaux.forEach(b=>{if(13<=b.cards.length)for(const c of b.cards)if(!c.faceDown&&13===c.ordinal&&(b=c.getTail(),13===b.length&&isConformant(this.rules,b))){c.moveTail(this);a=!0;break}});return a}english(){return`Foundation ${countInstances(Foundation)}. Single cards cannot be moved to the foundation. Only when you have constructed a complete sequence on the tableau, 13 cards in sequence from King to Ace, may you move it to the foundation.`}}
class Tableau extends CardContainer{constructor(a,b){super(a,b);this.rules=rules.Tableau;this.resetStackFactor_(this.rules);0===this.a_accept&&this.rules.accept&&(this.a_accept=this.rules.accept,this.createAcceptSVG_())}push(a){0===this.cards.length&&this.resetStackFactor_(this.rules);const b=Util.newPoint(this.pt);"Down"===this.rules.fan?b.y=this.dynamicY_():"Right"===this.rules.fan&&(b.x=this.dynamicX_());super.push(a,b)}pop(){const a=super.pop(),b=this.peek();b&&b.faceDown&&b.flipUp();return a}canAcceptCard(a){let b=
!0;if(!Number.isInteger(this.rules.maxcards)||this.cards.length<this.rules.maxcards)if(a.owner===this)b=!1;else{let c=this.peek();c?b=isConformant0(this.rules.build,c,a):0===this.a_accept?b=!0:Constants.ACCEPT_MARTHA_SYMBOL===this.a_accept?b=1===a.owner.canGrab(a).length:this.a_accept&&(b=a.ordinal===this.a_accept)}else b=!1;return b}canTarget(a){return null===this.rules.target?!0:this.rules.target===a.constructor.name}onclick(a){if(!a.faceDown&&settings.autoPlay&&this.canGrab(a)){var b=null;a.isTopCard()&&
(b=a.findFullestAcceptingContainer(foundations));b||(b=a.findFullestAcceptingContainer(tableaux));!b&&a.isTopCard()&&(b=a.findFullestAcceptingContainer(cells));b?a.moveTail(b):a.shake()}}isSolveable(){return this.cards.length?isConformant(this.rules.build,this.cards):!0}english(){let a;a=this.rules.build.suit===this.rules.move.suit&&this.rules.build.rank===this.rules.move.rank?`Tableau ${countInstances(Tableau)}. Build ${englishRules(this.rules.build)}.`:`Tableau ${countInstances(Tableau)}. Build ${englishRules(this.rules.build)}. Move sequences ${englishRules(this.rules.move)}.`;
this.rules.bury&&(a+=` At the start, ${Constants.cardValuesEnglish[this.rules.bury]}s are moved to the bottom of the tableau.`);this.rules.disinter&&(a+=` At the start, ${Constants.cardValuesEnglish[this.rules.disinter]}s are moved to the top of the tableau.`);tableaux[0].a_accept===Constants.ACCEPT_NOTHING_SYMBOL?a+=" Cards may not be placed in an empty tableau.":tableaux[0].a_accept===Constants.ACCEPT_MARTHA_SYMBOL?a+=" Only one card can be placed in an empty tableau.":0===tableaux[0].a_accept?
a+=" Any card may be placed in an empty tableau.":1<=tableaux[0].a_accept&&13>=tableaux[0].a_accept&&(a+=` Only a ${Constants.cardValuesEnglish[tableaux[0].a_accept]} may be placed in an empty tableau.`);return a}}class TableauTail extends Tableau{canGrab(a){a=a.getTail();return isConformant(this.rules.move,a)?a:null}availableMoves(){return this.availableMovesStack_()}english(){return super.english()+" Completed sequences of cards may be moved together."}}
class TableauBlockade extends TableauTail{autoMove(){0===this.cards.length&&0<stock.cards.length&&moveCards(stock,this,1)}english(){return super.english()+" Spaces are automatically filled with the top card from the stock."}}class TableauFortunesFavor extends Tableau{autoMove(){0===this.cards.length&&0<waste.cards.length&&moveCards(waste,this,1)}english(){return super.english()+" Spaces are automatically filled with the top card from the waste or stock."}}
class TableauCanfield extends TableauTail{autoMove(){0===this.cards.length&&0<reserves[0].cards.length&&moveCards(reserves[0],this,1)}english(){return super.english()+" Spaces are automatically filled with the top card from the reserve."}}class TableauSpider extends TableauTail{onclick(a){if(!a.faceDown&&settings.autoPlay&&this.canGrab(a)){var b=a.findFullestAcceptingContainer(foundations);b||(b=a.findFullestAcceptingContainer(tableaux));b?a.moveTail(b):a.shake()}}}
class TableauFreecell extends Tableau{powerMoves_(a=!1){let b=0;cells.forEach(a=>{0===a.cards.length&&b++});let c=0;tableaux.forEach(a=>{0===a.cards.length&&c++});a&&0<c&&--c;return(1+b)*Math.pow(2,c)}canGrab(a){a=a.getTail();if(!isConformant(this.rules.move,a))return null;const b=this.powerMoves_();return a.length>b?null:a}canAcceptCard(a){let b=super.canAcceptCard(a);if(b&&a.owner instanceof Tableau&&(a=a.getTail())&&0<a.length){const c=this.powerMoves_(0===this.cards.length);a.length>c&&(b=!1)}return b}availableMoves(){return this.availableMovesStack_()}english(){return super.english()+
" Strictly, only the top card of each stack may be moved. However, the games automates moves of several cards, when empty tableau columns and empty cells allow."}}class TableauGolf extends Tableau{onclick(a){a.isTopCard()&&(foundations[0].canAcceptCard(a)?moveCards(this,foundations[0],1):a.shake())}availableMoves(){this.cards.forEach(a=>a.markMoveable());const a=this.peek();return a&&foundations[0].canAcceptCard(a)?(a.markMoveable(foundations[0]),1):0}}
function linkClasses(a){const b=[];a.forEach(a=>{document.querySelectorAll("g."+a.name).forEach(c=>{var d=c.querySelector("rect"),f=Number.parseInt(d.getAttribute("x"),10)||0;d=Number.parseInt(d.getAttribute("y"),10)||0;f=Util.newPoint(f,d);b.push(new a(f,c))})});return b}function countInstances(a){let b=0;cardContainers.forEach(c=>{c instanceof a&&b++});return`(${Util.plural(b,"stack")})`}
function isConformant0(a,b,c){if(b.faceDown||c.faceDown)return!1;switch(a.suit){case 0:return!1;case 2:if(c.suit!==b.suit)return!1;break;case 3:if(c.color!==b.color)return!1;break;case 4:if(c.color===b.color)return!1;break;case 5:if(c.suit===b.suit)return!1}switch(a.rank){case 0:return!1;case 1:if(a.rankwrap){if((13!==b.ordinal||1!==c.ordinal)&&c.ordinal!==b.ordinal+1)return!1}else if(c.ordinal!==b.ordinal+1)return!1;break;case 2:if(a.rankwrap){if((1!==b.ordinal||13!==c.ordinal)&&c.ordinal!==b.ordinal-
1)return!1}else if(c.ordinal!==b.ordinal-1)return!1;break;case 4:if(a.rankwrap){if(!(13===b.ordinal&&1===c.ordinal||1===b.ordinal&&13===c.ordinal||1===Math.abs(b.ordinal-c.ordinal)))return!1}else if(1!==Math.abs(b.ordinal-c.ordinal))return!1}return!0}function isConformant(a,b){let c=b[0];for(let d=1;d<b.length;d++){const e=b[d];if(!isConformant0(a,c,e))return!1;c=e}return!0}
function englishRules(a){let b="";switch(a.suit){case 0:b="not allowed";break;case 1:b="regardless of suit";break;case 2:b="in suit";break;case 3:b="in color";break;case 4:b="in alternate colors";break;case 5:b="in any other suit"}switch(a.rank){case 1:b+=" and up, e.g. a 10 goes on a 9";a.rankwrap&&(b+=", Aces are allowed on Kings");break;case 2:b+=" and down, e.g. a 9 goes on a 10";a.rankwrap&&(b+=", Kings are allowed on Aces");break;case 4:b+=" and either up or down";a.rankwrap&&(b+=", Aces and Kings can go on top of each other");
break;case 5:b+=" regardless of rank"}return b}function isComplete(){return cardContainers.every(a=>a.isComplete())}function pullCardsToFoundations(){let a=!1;foundations.forEach(b=>{b.collector()&&(a=!0)});return a}function allAvailableMoves(){return cardContainers.reduce((a,b)=>a+b.availableMoves(),0)}window.doshowavailablemoves=function(){const a=allAvailableMoves();0===a?displayToastNoAvailableMoves():displayToast(`<span>${Util.plural(a,"move")} available</span>`)};
function gameOver(){const a=gameState[rules.Name];isComplete()?(console.log("recording stats for won game",a),a.totalGames+=1,a.totalMoves+=undoStack.length,a.gamesWon+=1,a.currStreak=0>a.currStreak?1:a.currStreak+1,a.currStreak>a.bestStreak&&(a.bestStreak=a.currStreak)):0<undoStack.length?(console.log("recording stats for lost game",a),a.totalGames+=1,a.totalMoves+=undoStack.length,0<a.currStreak?a.currStreak=-1:--a.currStreak,a.currStreak<a.worstStreak&&(a.worstStreak=a.currStreak)):console.log("game over with no moves");
a.modified=Date.now();a.undoStack&&(a.undoStack=[])}function restart(a){cardContainers.forEach(a=>{a!==stock&&(stock.cards=stock.cards.concat(a.cards),a.cards=[])});stock.cards.forEach(a=>{a.owner=stock;a.faceDown||a.flipDown();a.position1(stock.pt.x,stock.pt.y)});stock.sort(a);stock.cards.forEach(a=>baize.elevateCard(a));stock.redeals=rules.Stock.redeals;undoReset();foundations.forEach(a=>a.scattered=!1);gameState[rules.Name].undoStack&&(gameState[rules.Name].undoStack=[]);dealCards()}
window.dostar=function(){gameOver();restart()};window.dostarseed=function(){modalStarSeedFn.open()};window.dostarseeddeal=function(){let a=parseInt(document.getElementById("starSeed").value);isNaN(a)||0>a||999999<a?displayToast("deal number must be 1 ... 999999"):(gameOver(),restart(a))};window.doreplay=function(){gameOver();restart(gameState[rules.Name].seed)};window.dofindnewgame=function(){window.location.replace("chooser.html")};
class Saved{constructor(){this.seed=gameState[rules.Name].seed;this.redeals=stock.redeals;this.containers=[];for(let a=0;a<cardContainers.length;a++)this.containers[a]=cardContainers[a].getSaveableCards()}}window.dosaveposition=function(){gameState[rules.Name].savedPosition=undoStack.length;displayToast("this position saved")};
window.doloadposition=function(){if(!gameState[rules.Name].hasOwnProperty("savedPosition"))displayToast("no saved position");else if(gameState[rules.Name].savedPosition<undoStack.length)for(;undoStack.length>gameState[rules.Name].savedPosition;)window.doundo()};
window.doload=function(){if(0===gameState[rules.Name].undoStack.length)return!1;undoStack=gameState[rules.Name].undoStack;const a=undoPop();var b=0;for(let c=0;c<a.containers.length;c++)b+=a.containers[c].length;if(b!==stock.expectedNumberOfCards())return console.log(`found ${b} in saved, expected ${stock.expectedNumberOfCards()}`),undoReset(),!1;for(b=0;b<cardContainers.length;b++)cardContainers[b].load(a.containers[b]);gameState[rules.Name].seed=a.seed;a.hasOwnProperty("redeals")?stock.redeals=
a.redeals:stock.redeals=null;stock.updateRedealsSVG_();scrunchContainers();checkIfGameOver();return!0};const modalStarSeedFn=M.Modal.getInstance(document.getElementById("modalStarSeed"));modalStarSeedFn.options.onOpenStart=function(){const a=document.getElementById("starSeed");a&&(a.value=String(gameState[rules.Name].seed),a.focus())};modalStarSeedFn.options.onCloseEnd=function(){};const modalSettingsFn=M.Modal.getInstance(document.getElementById("modalSettings"));
modalSettingsFn.options.onOpenStart=function(){document.getElementById("aniSpeed").value=settings.aniSpeed;document.getElementById("sensoryCues").checked=settings.sensoryCues;document.getElementById("autoPlay").checked=settings.autoPlay;document.getElementById("autoOff").checked=settings.autoCollect===Constants.AUTOCOLLECT_OFF;document.getElementById("autoSolve").checked=settings.autoCollect===Constants.AUTOCOLLECT_SOLVEABLE;document.getElementById("autoAny").checked=settings.autoCollect===Constants.AUTOCOLLECT_ANY};
modalSettingsFn.options.onCloseEnd=function(){settings.aniSpeed=document.getElementById("aniSpeed").value;settings.sensoryCues=document.getElementById("sensoryCues").checked;settings.autoPlay=document.getElementById("autoPlay").checked;document.getElementById("autoOff").checked?settings.autoCollect=Constants.AUTOCOLLECT_OFF:document.getElementById("autoSolve").checked?settings.autoCollect=Constants.AUTOCOLLECT_SOLVEABLE:document.getElementById("autoAny").checked&&(settings.autoCollect=Constants.AUTOCOLLECT_ANY);
allAvailableMoves()};const modalStatisticsFn=M.Modal.getInstance(document.getElementById("modalStatistics"));
modalStatisticsFn.options.onOpenStart=function(){const a=gameState[rules.Name];if(isComplete())document.getElementById("thisGameStats").innerHTML=`You won this game of ${rules.Name} (number ${a.seed}) in ${Util.plural(undoStack.length,"move")}`;else{let b=`Moves made: ${undoStack.length}, moves available: ${allAvailableMoves()}`;rules.Stock.hidden||(b+=`, stock cards: ${stock.cards.length}`);waste&&(b+=`, waste cards: ${waste.cards.length}`);b+=`, game number: ${a.seed}`;document.getElementById("thisGameStats").innerHTML=
b}document.getElementById("gamesPlayedStats").innerHTML=0===a.totalGames?`You've not played ${rules.Name} before`:`You've played ${rules.Name} ${a.totalGames} times, and won ${a.gamesWon} (${Math.round(a.gamesWon/a.totalGames*100)}%)`;0<a.totalGames?document.getElementById("gamesStreakStats").innerHTML=`Your current streak is ${a.currStreak}, your best winning streak is ${a.bestStreak}, your worst is ${a.worstStreak}`:document.getElementById("gamesStreakStats").innerHTML="";let b=0,c=0;Object.keys(gameState).forEach(a=>
{gameState[a].totalGames&&(b+=gameState[a].totalGames);gameState[a].gamesWon&&(c+=gameState[a].gamesWon)});b&&(document.getElementById("gamesTotalStats").innerHTML=`In total, you have played ${Util.plural(b,"game")} and won ${c} of them (${Math.round(c/b*100)}%)`)};modalStatisticsFn.options.onCloseEnd=function(){};const modalGameOverFn=M.Modal.getInstance(document.getElementById("modalGameOver"));
modalGameOverFn.options.onOpenStart=function(){const a=gameState[rules.Name];let b=`You won this game of ${rules.Name} in ${undoStack.length} moves`;1<a.gamesWon&&(b+=`; your average is ${Math.round(a.totalMoves/a.gamesWon)}`);document.getElementById("movesMade").innerHTML=b};modalGameOverFn.options.onCloseEnd=function(){};const modalAreYouSureFn=M.Modal.getInstance(document.getElementById("modalAreYouSure"));
window.areYouSure=function(a){console.assert("string"===typeof a);document.getElementById("modalAreYouSureYes").setAttribute("onclick",`${a}()`);modalAreYouSureFn.open()};const modalShowRulesFn=M.Modal.getInstance(document.getElementById("modalShowRules"));
modalShowRulesFn.options.onOpenStart=function(){let a="<p>"+stock.english()+"</p>";[waste,foundations[0],tableaux[0],cells[0],reserves[0]].forEach(b=>{b&&(a=a+"<p>"+b.english()+"</p>")});document.getElementById("therules").innerHTML=a;const b=document.getElementById("theruleswikipedia");rules.hasOwnProperty("Wikipedia")&&rules.Wikipedia.length?(b.hidden=!1,b.href=rules.Wikipedia):b.hidden=!0};window.doshowrules=function(){modalShowRulesFn.open()};
window.dostatsreset=function(){const a=gameState[rules.Name];a.totalMoves=0;a.totalGames=0;a.gamesWon=0;a.currStreak=0;a.bestStreak=0;a.worstStreak=0;a.modified=Date.now()};function displayToast(a){document.querySelector(".toast")||M.toast({html:a})}function displayToastNoAvailableMoves(){displayToast('<span>no available moves</span><button class="btn-flat toast-action" onclick="window.doundo()">Undo</button><button class="btn-flat toast-action" onclick="dostar()">New</button>')}
window.dosettings=function(){modalSettingsFn.open()};window.dohelp=function(){window.open(rules.Wikipedia)};function dealCards(){cardContainers.forEach(a=>{window.setTimeout(()=>a.deal(),100)});waitForCards().then(()=>{undoReset()})}const rules=JSON.parse(document.getElementById("rules").innerHTML)||{};document.title=Constants.GAME_NAME+" "+Constants.GAME_VERSION+" "+rules.Name;document.getElementById("nav-title").innerHTML=rules.Name;document.getElementById("sidenav-title").innerHTML=rules.Name;
"Name Cards Stock Waste Foundation Tableau Cell Reserve Winnable Wikipedia".split(" ").forEach(a=>{rules.hasOwnProperty(a)||(rules[a]={})});rules.Cards.hasOwnProperty("suit")||(rules.Cards.suit="TopRight");rules.Stock.hasOwnProperty("packs")||(rules.Stock.packs=1);rules.Stock.hasOwnProperty("cards")||(rules.Stock.cards=1);rules.Stock.hasOwnProperty("redeals")||(rules.Stock.redeals=null);rules.Stock.hasOwnProperty("suitfilter")||(rules.Stock.suitfilter="\u2660\u2665\u2666\u2663");
rules.Stock.hasOwnProperty("hidden")||(rules.Stock.hidden=!1);rules.Stock.hasOwnProperty("target")||(rules.Stock.target=null);rules.Waste.hasOwnProperty("maxcards")||(rules.Waste.maxcards=null);rules.Waste.hasOwnProperty("target")||(rules.Waste.target=null);rules.Waste.hasOwnProperty("fan")||(rules.Waste.fan="Right");rules.Waste.hasOwnProperty("hidden")||(rules.Waste.hidden=!1);rules.Cell.hasOwnProperty("target")||(rules.Cell.target=null);rules.Cell.hasOwnProperty("hidden")||(rules.Cell.hidden=!1);
rules.Reserve.hasOwnProperty("fan")||(rules.Reserve.fan="Down");rules.Reserve.hasOwnProperty("maxfan")||(rules.Reserve.maxfan=0);rules.Reserve.hasOwnProperty("target")||(rules.Reserve.target=null);rules.Reserve.hasOwnProperty("hidden")||(rules.Reserve.hidden=!1);rules.Foundation.hasOwnProperty("fan")||(rules.Foundation.fan="None");rules.Foundation.hasOwnProperty("maxfan")||(rules.Foundation.maxfan=0);rules.Foundation.hasOwnProperty("scatter")||(rules.Foundation.scatter="Down");
rules.Foundation.hasOwnProperty("hidden")||(rules.Foundation.hidden=!1);rules.Foundation.hasOwnProperty("target")||(rules.Foundation.target=null);rules.Tableau.hasOwnProperty("fan")||(rules.Tableau.fan="Down");rules.Tableau.hasOwnProperty("maxcards")||(rules.Tableau.maxcards=null);rules.Tableau.hasOwnProperty("maxfan")||(rules.Tableau.maxfan=0);rules.Tableau.hasOwnProperty("build")||(rules.Tableau.build={suit:2,rank:4});rules.Tableau.hasOwnProperty("move")||(rules.Tableau.move={suit:4,rank:2});
rules.Tableau.hasOwnProperty("target")||(rules.Tableau.target=null);rules.Tableau.hasOwnProperty("hidden")||(rules.Tableau.hidden=!1);let settings={};try{settings=JSON.parse(localStorage.getItem(Constants.LOCALSTORAGE_SETTINGS))||{}}catch(a){settings={},console.error(a)}settings||(settings={});settings.hasOwnProperty("aniSpeed")||(settings.aniSpeed=3);settings.hasOwnProperty("autoCollect")||(settings.autoCollect=Constants.AUTOCOLLECT_SOLVEABLE);
settings.hasOwnProperty("sensoryCues")||(settings.sensoryCues=!0);settings.hasOwnProperty("autoPlay")||(settings.autoPlay=!0);settings.hasOwnProperty("dealWinnable")||(settings.dealWinnable=!1);settings.hasOwnProperty("loadSaved")||(settings.loadSaved=!0);settings.lastGame=window.location.pathname.split("/").pop();settings.lastVersion=Constants.GAME_VERSION;if(1>settings.aniSpeed||5<settings.aniSpeed)settings.aniSpeed=3;settings.autoCollect===Constants.AUTOCOLLECT_ACES&&(settings.autoCollect=Constants.AUTOCOLLECT_SOLVEABLE);
let gameState={};try{gameState=JSON.parse(localStorage.getItem(Constants.LOCALSTORAGE_GAMES))||{}}catch(a){gameState={},console.error(a)}0===Object.keys(gameState).length&&console.warn("game state not found in local storage");gameState.hasOwnProperty("Options")&&delete gameState.Options;gameState[rules.Name]||(gameState[rules.Name]={});gameState[rules.Name].totalMoves||(gameState[rules.Name].totalMoves=0);gameState[rules.Name].totalGames||(gameState[rules.Name].totalGames=0);
gameState[rules.Name].gamesWon||(gameState[rules.Name].gamesWon=0);gameState[rules.Name].currStreak||(gameState[rules.Name].currStreak=0);gameState[rules.Name].bestStreak||(gameState[rules.Name].bestStreak=0);gameState[rules.Name].worstStreak||(gameState[rules.Name].worstStreak=0);
const stocks=linkClasses([Stock,StockAgnes,StockCruel,StockFan,StockKlondike,StockGolf,StockScorpion,StockSpider]),stock=stocks[0],wastes=linkClasses([Waste]),waste=wastes[0],foundations=linkClasses([Foundation,FoundationCanfield,FoundationOsmosis,FoundationPenguin,FoundationSpider]),tableaux=linkClasses([Tableau,TableauBlockade,TableauCanfield,TableauFortunesFavor,TableauFreecell,TableauGolf,TableauSpider,TableauTail]),cells=linkClasses([Cell,CellCarpet]),reserves=linkClasses([Reserve,ReserveFrog]);
document.documentElement.style.setProperty("--bg-color","darkgreen");document.documentElement.style.setProperty("--hi-color","lightgreen");window.onbeforeunload=function(a){a=gameState[rules.Name];undoPush();a.undoStack=undoStack;a.modified=Date.now();try{localStorage.setItem(Constants.LOCALSTORAGE_GAMES,JSON.stringify(gameState)),localStorage.setItem(Constants.LOCALSTORAGE_SETTINGS,JSON.stringify(settings))}catch(b){console.error(b)}};
const someCardsInTransit=()=>{for(const a of cardContainers)if(a.cards.some(a=>a.animationIds.length))return!0;return!1},waitForCards=()=>new Promise((a,b)=>{const c=performance.now(),d=c+1E4,e=()=>{someCardsInTransit()?performance.now()>d?b("timed out waiting for cards to finish moving"):window.setTimeout(e,100):a(performance.now()-c)};window.setTimeout(e,0)}),waitForCard=a=>new Promise((b,c)=>{const d=performance.now(),e=d+1E4,f=()=>{0===a.animationIds.length?b(performance.now()-d):performance.now()>
e?c("timed out waiting for card to finish moving"):window.setTimeout(f,100)};window.setTimeout(f,0)}),scrunchContainers=()=>{waitForCards().then(a=>{tableaux.forEach(a=>a.scrunchCards(rules.Tableau));reserves.forEach(a=>a.scrunchCards(rules.Reserve));foundations.forEach(a=>a.scrunchCards(rules.Foundation))}).catch(a=>console.log("scrunch",a))},checkIfGameOver=()=>{waitForCards().then(a=>{isComplete()?foundations.every(a=>!a.scattered)&&(foundations.forEach(a=>a.scatter()),waitForCards().then(()=>
{modalGameOverFn.open()})):allAvailableMoves()||displayToastNoAvailableMoves()}).catch(a=>console.log("gameover",a))};let inRobot=!1;
function robot(){const a=()=>settings.autoCollect===Constants.AUTOCOLLECT_SOLVEABLE&&cardContainers.every(a=>a.isSolveable());console.assert(!inRobot);inRobot=!0;[tableaux,cells].forEach(a=>a.forEach(a=>{waitForCards().then(()=>a.autoMove()).catch(a=>console.log(a))}));(settings.autoCollect===Constants.AUTOCOLLECT_ANY||a())&&waitForCards().then(()=>{for(let a=pullCardsToFoundations();a;a=pullCardsToFoundations())waitForCards().catch(a=>console.log("collect",a))});scrunchContainers();checkIfGameOver();
inRobot=!1}document.addEventListener("keypress",function(a){switch(a.key.toLowerCase()){case "a":window.doshowavailablemoves();break;case "e":if(waste&&waste.peek())waste.onclick(waste.peek());break;case "l":window.doloadposition();break;case "r":modalShowRulesFn.open();break;case "s":window.dosaveposition();break;case "u":window.doundo();break;case "w":if(stock.peek())stock.onclick(stock.peek())}});
class KeyFocus{constructor(){this.cc=tableaux[0];this.c=this.cc.peek();this.mark(!0)}mark(a){(this.c?this.c:this.cc).g.querySelector("rect").classList.toggle("focus",a)}findGrab_(){if(this.c&&this.cc.cards.length)for(;!this.cc.canGrab(this.c);){const a=this.c.owner.cards.findIndex(a=>a===this.c);if(a===this.cc.cards.length-1)break;this.c=this.cc.cards[a+1]}}moveLeft(){this.mark(!1);const a=this.c?this.c.owner.cards.findIndex(a=>a===this.c):-1;let b=cardContainers.findIndex(a=>a==this.cc);for(;b=0===
b?cardContainers.length-1:b-1,cardContainers[b].rules.hidden;);this.cc=cardContainers[b];this.c=0<=a&&a<this.cc.cards.length?this.cc.cards[a]:this.cc.peek();this.findGrab_();this.mark(!0)}moveRight(){this.mark(!1);const a=this.c?this.c.owner.cards.findIndex(a=>a===this.c):-1;let b=cardContainers.findIndex(a=>a==this.cc);for(;b=cardContainers.length-1===b?0:b+1,cardContainers[b].rules.hidden;);this.cc=cardContainers[b];this.c=0<=a&&a<this.cc.cards.length?this.cc.cards[a]:this.cc.peek();this.findGrab_();
this.mark(!0)}moveUp(){const a=()=>{let a=cardContainers.find(a=>!a.rules.hidden&&a.pt.x===this.cc.pt.x&&a.pt.y<this.cc.pt.y);a&&(this.cc=a);return!!a};this.mark(!1);if(this.c){let b=this.c.owner.cards.findIndex(a=>a===this.c);0<b?this.c=this.c.owner.cards[b-1]:a()&&(this.c=this.cc.peek())}else a()&&(this.c=this.cc.peek());this.findGrab_();this.mark(!0)}moveDown(){const a=()=>{let a=cardContainers.find(a=>!a.rules.hidden&&a.pt.x===this.cc.pt.x&&a.pt.y>this.cc.pt.y);a&&(this.cc=a);return!!a};this.mark(!1);
if(this.c){let b=this.c.owner.cards.findIndex(a=>a===this.c);b<this.c.owner.cards.length-1?this.c=this.c.owner.cards[b+1]:a()&&(this.c=this.cc.cards[0])}else a()&&(this.c=this.cc.cards[0]);this.findGrab_();this.mark(!0)}action(){this.mark(!1);this.c?(this.cc.onclick(this.c),this.cc=this.c.owner):this.cc.clickOnEmpty&&(this.cc.clickOnEmpty(),this.c=this.cc.peek());this.mark(!0)}}
document.addEventListener("keydown",function(a){switch(a.key){case "ArrowLeft":keyFocus?keyFocus.moveLeft():keyFocus=new KeyFocus;a.preventDefault();break;case "ArrowRight":keyFocus?keyFocus.moveRight():keyFocus=new KeyFocus;a.preventDefault();break;case "ArrowUp":keyFocus?keyFocus.moveUp():keyFocus=new KeyFocus;a.preventDefault();break;case "ArrowDown":keyFocus?keyFocus.moveDown():keyFocus=new KeyFocus;a.preventDefault();break;case "Enter":case " ":keyFocus&&keyFocus.action(),a.preventDefault()}});
gameState[rules.Name].undoStack&&0<gameState[rules.Name].undoStack.length&&settings.loadSaved?(window.doload()||(stock.createPacks(),window.onload=dealCards),gameState[rules.Name].undoStack=[]):(stock.createPacks(),window.onload=dealCards);0===gameState[rules.Name].totalGames&&window.doshowrules();
